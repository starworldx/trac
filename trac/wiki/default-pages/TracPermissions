= Trac Permissions
[[TracGuideToc]]

Trac uses a simple, case sensitive, permission system to control what users can and can't access.

Permissions are managed using the [TracAdmin trac-admin] tool or the ''General / Permissions'' panel in the ''Admin'' tab of the web interface.

In addition to the default permission policy described in this page, it is possible to activate additional permission policies by enabling plugins and listing them in [TracIni#trac-permission_policies-option "[trac] permission_policies"]. See TracFineGrainedPermissions for more details.

Non-authenticated users accessing the system are assigned the name //anonymous//. Assign permissions to the //anonymous// user to set privileges for anonymous/guest users. The parts of Trac that a user does not have privilege for will not be displayed in the navigation.
In addition to these privileges, users can be granted additional individual rights in effect when authenticated and logged into the system. All logged in users belong to the virtual group //authenticated//, which inherits permissions from //anonymous//.

== Graphical Admin Tab

To access this tab, a user must have one of the following permissions: `TRAC_ADMIN`, `PERMISSION_ADMIN`, `PERMISSION_GRANT`, `PERMISSION_REVOKE`. The permissions can be granted using the `trac-admin` command with a more detailed description [#GrantingPrivileges below]:
{{{#!sh
$ trac-admin /path/to/projenv permission add bob TRAC_ADMIN
}}}

Then, the user `bob` will be able to see the Admin tab, and can access the permissions menu. This menu will allow you to perform all the following actions, but from the browser rather than requiring root access to the server. '''Use at least one lowercase character in user names, as all-uppercase names are reserved for permissions.'''

[[Image(htdocs:../common/guide/admin.png)]]

[[Image(htdocs:../common/guide/admin-permissions.png)]]

[[Image(htdocs:../common/guide/admin-permissions-TICKET_ADMIN.png)]]

From the graphical admin tab, users with `PERMISSION_GRANT` will only be allowed to grant permissions that they possess, and users with `PERMISSION_REVOKE` will only be allowed to revoke permissions that they possess. For example, a user cannot grant `MILESTONE_ADMIN` unless they have `PERMISSION_GRANT` and `MILESTONE_ADMIN`, and they cannot revoke `MILESTONE_ADMIN` unless they have `PERMISSION_REVOKE` and `MILESTONE_ADMIN`. `PERMISSION_ADMIN` just grants the user both `PERMISSION_GRANT` and `PERMISSION_REVOKE`, and users with `TRAC_ADMIN` can grant or revoke any permission.

== Available Privileges

To enable all privileges for a user, use the `TRAC_ADMIN` permission. This permission is like being `root` on a *NIX system: it will allow you to perform any operation.

Otherwise, individual privileges can be assigned to users for the different functional areas of Trac and '''note that the privilege names are uppercase''':

=== Repository Browser

|| `BROWSER_VIEW` || View directory listings in the [TracBrowser repository browser] ||
|| `FILE_VIEW` || View files in the [TracBrowser repository browser] ||
|| `CHANGESET_VIEW` || View [TracChangeset repository check-ins] ||
|| `LOG_VIEW` || View revision logs of files and directories in the [TracBrowser repository browser] ||

=== Ticket System

|| `TICKET_VIEW` || View existing [TracTickets tickets] and perform [TracQuery ticket queries] ||
|| `TICKET_CREATE` || Create new [TracTickets tickets] ||
|| `TICKET_APPEND` || Add comments and attachments to [TracTickets tickets], and edit description of ticket the user created ||
|| `TICKET_CHGPROP` || Modify [TracTickets ticket] properties (priority, assignment, keywords, etc.) with the following exceptions: edit description of tickets created by others, add/remove other users from cc field when logged in ||
|| `TICKET_MODIFY` || Includes both `TICKET_APPEND` and `TICKET_CHGPROP`, and in addition allows resolving [TracTickets tickets] in the [TracWorkflow default workflow]. Tickets can be assigned to users through a [TracTickets#Assign-toasDrop-DownList drop-down list] when the list of possible owners has been restricted. ||
|| `TICKET_EDIT_CC` || Full modify cc field ||
|| `TICKET_EDIT_DESCRIPTION` || Modify description field. User with `TICKET_APPEND` or `TICKET_CHGPROP` can modify description of ticket they created. ||
|| `TICKET_EDIT_COMMENT` || Modify another user's comments. Any user can modify their own comments by default. ||
|| `TICKET_BATCH_MODIFY` || [TracBatchModify Batch modify] tickets ||
|| `TICKET_ADMIN` || All `TICKET_*` permissions, deletion of ticket attachments and modification of the reporter field, which grants ability to create a ticket on behalf of another user and it will appear that another user created the ticket. It also allows managing ticket properties through the web administration module. ||

=== Roadmap

|| `MILESTONE_VIEW` || View milestones and assign tickets to milestones. ||
|| `MILESTONE_CREATE` || Create new milestones ||
|| `MILESTONE_MODIFY` || Modify milestones ||
|| `MILESTONE_DELETE` || Delete milestones ||
|| `MILESTONE_ADMIN` || All `MILESTONE_*` permissions ||
|| `ROADMAP_VIEW` || View the [TracRoadmap roadmap] page, which is not yet the same as MILESTONE_VIEW, see [trac:#4292 #4292] ||
|| `ROADMAP_ADMIN` || to be removed with [trac:#3022 #3022], replaced by MILESTONE_ADMIN ||

=== Reports

|| `REPORT_VIEW` || View [TracReports reports], i.e. the //View Tickets// link. ||
|| `REPORT_SQL_VIEW` || View the SQL query of a [TracReports report] ||
|| `REPORT_CREATE` || Create new [TracReports reports] ||
|| `REPORT_MODIFY` || Modify [TracReports reports] ||
|| `REPORT_DELETE` || Delete [TracReports reports] ||
|| `REPORT_ADMIN` || All `REPORT_*` permissions ||

=== Wiki System

|| `WIKI_VIEW` || View [TracWiki wiki] pages ||
|| `WIKI_CREATE` || Create new [TracWiki wiki] pages ||
|| `WIKI_MODIFY` || Modify [TracWiki wiki] pages ||
|| `WIKI_RENAME` || Rename [TracWiki wiki] pages ||
|| `WIKI_DELETE` || Delete [TracWiki wiki] pages and attachments ||
|| `WIKI_ADMIN` || All `WIKI_*` permissions, plus the management of ''readonly'' pages. ||

=== Permissions

|| `PERMISSION_GRANT` || add/grant a permission ||
|| `PERMISSION_REVOKE` || remove/revoke a permission ||
|| `PERMISSION_ADMIN` || All `PERMISSION_*` permissions ||

=== Others

|| `TIMELINE_VIEW` || View the [TracTimeline timeline] page ||
|| `SEARCH_VIEW` || View and execute [TracSearch search] queries ||
|| `CONFIG_VIEW` || Enables additional sections on ''About Trac'' that show the current configuration and the list of installed plugins ||
|| `EMAIL_VIEW` || Shows email addresses even if [TracIni#trac-section trac show_email_addresses] configuration option is false ||

== Attachment Permissions

Attachment permissions are handled by `LegacyAttachmentPolicy`, and unlike the permissions discussed so far, the permissions provided by `LegacyAttachmentPolicy` are not directly granted. Rather, the ability to create, view and delete attachments is determined by the attachment's parent realm and permissions the user possesses for that realm.

The attachment actions are determined by the following
permissions in the ticket, wiki and milestone realms:
{{{#!table class="listing"
||= Granted By: =||= Ticket =||= Wiki =||= Milestone =||
|| `ATTACHMENT_CREATE` || `TICKET_APPEND` || `WIKI_MODIFY` || `MILESTONE_MODIFY` ||
|| `ATTACHMENT_VIEW` || `TICKET_VIEW` || `WIKI_VIEW` || `MILESTONE_VIEW` ||
|| `ATTACHMENT_DELETE` || `TICKET_ADMIN` || `WIKI_DELETE` || `MILESTONE_DELETE` ||
}}}

An authenticated user can delete an attachment //they added// without possessing the permission
that grants `ATTACHMENT_DELETE`.

If explicit attachment permissions are preferred, `ATTACHMENT_CREATE`, `ATTACHMENT_DELETE` and `ATTACHMENT_VIEW` can be created using the [trac:ExtraPermissionsProvider]. The simplest implementation is to simply define the actions.
{{{#!ini
[extra-permissions]
_perms = ATTACHMENT_CREATE, ATTACHMENT_DELETE, ATTACHMENT_VIEW
}}}

An alternative configuration adds an `ATTACHMENT_ADMIN` meta-permission that grants the other 3 permission.
{{{#!ini
[extra-permissions]
ATTACHMENT_ADMIN = ATTACHMENT_CREATE, ATTACHMENT_DELETE, ATTACHMENT_VIEW
}}}

The explicit permissions can be used in concert with `LegacyAttachmentPolicy`, or `LegacyAttachmentPolicy` can be removed from `permission_policies`, in which case only users that have been explicitly granted the corresponding attachment actions will be able to create, delete and view attachments.

== Granting Privileges

You grant privileges to users using [TracAdmin trac-admin]. The current set of privileges can be listed with the following command:
{{{#!sh
$ trac-admin /path/to/projenv permission list
}}}

This command will allow the user ''bob'' to delete reports:
{{{#!sh
$ trac-admin /path/to/projenv permission add bob REPORT_DELETE
}}}

The `permission add` command also accepts multiple privilege names:
{{{#!sh
$ trac-admin /path/to/projenv permission add bob REPORT_DELETE WIKI_CREATE
}}}

Or add all privileges:
{{{#!sh
$ trac-admin /path/to/projenv permission add bob TRAC_ADMIN
}}}

== Permission Groups

There are two built-in groups, //authenticated// and //anonymous//.
Any user who has not logged in is automatically in the //anonymous// group.
Any user who has logged in is also in the //authenticated// group.
The //authenticated// group inherits permissions from the //anonymous// group.
For example, if the //anonymous// group has permission WIKI_MODIFY, it is not necessary to add the WIKI_MODIFY permission to the //authenticated// group as well.

Custom groups may be defined that inherit permissions from the two built-in groups.

Permissions can be grouped together to form roles such as ''developer'', ''admin'', etc.
{{{#!sh
$ trac-admin /path/to/projenv permission add developer WIKI_ADMIN
$ trac-admin /path/to/projenv permission add developer REPORT_ADMIN
$ trac-admin /path/to/projenv permission add developer TICKET_MODIFY
$ trac-admin /path/to/projenv permission add bob developer
$ trac-admin /path/to/projenv permission add john developer
}}}

Group membership can be checked by doing a {{{permission list}}} with no further arguments; the resulting output will include group memberships. '''Use at least one lowercase character in group names, as all-uppercase names are reserved for permissions'''.

== Adding a New Group and Permissions
Permission groups can be created by assigning a user to a group you wish to create, then assign permissions to that group.

The following will add ''bob'' to the new group called ''beta_testers'' and then will assign `WIKI_ADMIN` permissions to that group. Thus, ''bob'' will inherit the `WIKI_ADMIN` permission.
{{{#!sh
$ trac-admin /path/to/projenv permission add bob beta_testers
$ trac-admin /path/to/projenv permission add beta_testers WIKI_ADMIN
}}}

== Removing Permissions

Permissions can be removed using the 'remove' command.

This command will prevent the user ''bob'' from deleting reports:
{{{#!sh
$ trac-admin /path/to/projenv permission remove bob REPORT_DELETE
}}}

Just like `permission add`, this command accepts multiple privilege names.

You can also remove all privileges for a specific user:
{{{#!sh
$ trac-admin /path/to/projenv permission remove bob '*'
}}}

Or one privilege for all users:
{{{#!sh
$ trac-admin /path/to/projenv permission remove '*' REPORT_ADMIN
}}}

== Creating New Privileges

To create custom permissions, for example to be used in a custom workflow, enable the optional [trac:ExtraPermissionsProvider tracopt.perm.config_perm_provider.ExtraPermissionsProvider] component in the "Plugins" admin panel, and add the desired permissions to the `[extra-permissions]` section in your [TracIni#extra-permissions-section trac.ini]. For more information, please refer to the documentation  on the [TracIni#extra-permissions-section TracIni] page after enabling the component.

== Default Permissions

By default on a new Trac installation, the //anonymous// user will have ''view'' access to everything in Trac, but will not be able to create or modify anything.
On the other hand, the //authenticated// users will have the permissions to ''create and modify tickets and wiki pages''.

//**anonymous**//
{{{
BROWSER_VIEW
CHANGESET_VIEW
FILE_VIEW
LOG_VIEW
MILESTONE_VIEW
REPORT_SQL_VIEW
REPORT_VIEW
ROADMAP_VIEW
SEARCH_VIEW
TICKET_VIEW
TIMELINE_VIEW
WIKI_VIEW
}}}

//**authenticated**//
{{{
TICKET_CREATE
TICKET_MODIFY
WIKI_CREATE
WIKI_MODIFY
}}}
----
See also: TracAdmin, TracFineGrainedPermissions
